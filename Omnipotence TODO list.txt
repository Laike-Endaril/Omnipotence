Add path debugging command (/omnipotence pathing show/hide)



Find a new way to ensure my mod is first in the event priority queue...
...actual mod loading order may be difficult due to dependencies of my own and other mods
...enum alterations didn't turn out well, though I learned some interesting hacks

See if I can reliably get an event for pre- and post-gc...
...gc run count change timing = ? (probably post- as I assume the thread detecting it will be locked until the gc is done)
...finalize timing = ?
...notification listener timing = ?

Add timestamp

Find a way to differentiate between mods, not just threads...
...intercept execution of mod specific code and do a before/after comparison?
...maybe I can add listeners for all events, and hack-force my listeners to being the first to execute?

Add lang support; skipping any more of it for now to speed up development



Notes:

Remember to change the jar filename in AgentTest run config whenever a new jar is built


Incredibly early execution can be accomplished by using a tweaker class (implements ITweaker) and a command line argument pointing to it (--tweakClass TweakerClassName)
But earliest execution is still from a runtime agent (premain), and both require java args anyway?


In the current version (1.12.2.000c), the game runs fine with the mod in the mods folder and the javaagent arg in MultiMC, but...

...on dedicated, it runs...
1. If the mod is in mods, and you don't use javaagent
2. If the mod is *not* in mods, and you use javaagent (still loads as a mod)

...but it doesn't run...
1. If the mod is in mods and you use javaagent (duplicate mod crash)
2. If the mod is *not* in mods and you *don't* use javaagent (does not load mod)
